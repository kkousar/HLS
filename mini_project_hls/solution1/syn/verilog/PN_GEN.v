// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="PN_GEN,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.060000,HLS_SYN_LAT=3237,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=27519,HLS_SYN_LUT=13165}" *)

module PN_GEN (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        length_r,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY,
        last
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state41 = 5'd16;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] length_r;
output  [7:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;
output   last;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_V_V_TVALID;
reg last;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter36;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter35_tmp_31_reg_864;
reg   [31:0] n_reg_154;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_state12_pp0_stage0_iter8;
wire    ap_block_state13_pp0_stage0_iter9;
wire    ap_block_state14_pp0_stage0_iter10;
wire    ap_block_state15_pp0_stage0_iter11;
wire    ap_block_state16_pp0_stage0_iter12;
wire    ap_block_state17_pp0_stage0_iter13;
wire    ap_block_state18_pp0_stage0_iter14;
wire    ap_block_state19_pp0_stage0_iter15;
wire    ap_block_state20_pp0_stage0_iter16;
wire    ap_block_state21_pp0_stage0_iter17;
wire    ap_block_state22_pp0_stage0_iter18;
wire    ap_block_state23_pp0_stage0_iter19;
wire    ap_block_state24_pp0_stage0_iter20;
wire    ap_block_state25_pp0_stage0_iter21;
wire    ap_block_state26_pp0_stage0_iter22;
wire    ap_block_state27_pp0_stage0_iter23;
wire    ap_block_state28_pp0_stage0_iter24;
wire    ap_block_state29_pp0_stage0_iter25;
wire    ap_block_state30_pp0_stage0_iter26;
wire    ap_block_state31_pp0_stage0_iter27;
wire    ap_block_state32_pp0_stage0_iter28;
wire    ap_block_state33_pp0_stage0_iter29;
wire    ap_block_state34_pp0_stage0_iter30;
wire    ap_block_state35_pp0_stage0_iter31;
wire    ap_block_state36_pp0_stage0_iter32;
wire    ap_block_state37_pp0_stage0_iter33;
wire    ap_block_state38_pp0_stage0_iter34;
wire    ap_block_state39_pp0_stage0_iter35;
wire    ap_block_state40_pp0_stage0_iter36;
reg    ap_sig_ioackin_out_V_V_TREADY;
reg    ap_block_state40_io;
reg    ap_block_pp0_stage0_11001;
reg   [1599:0] x2_1_reg_166;
reg   [1599:0] x1_1_reg_175;
wire   [10:0] indvarinc_fu_187_p2;
wire    ap_CS_fsm_state2;
reg   [1599:0] x1_2_fu_197_p4;
reg   [1599:0] x1_2_reg_779;
wire   [10:0] indvarinc9_fu_221_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_4_fu_241_p2;
reg   [1599:0] x1_3_fu_252_p4;
wire   [1599:0] x2_3_fu_261_p5;
wire   [0:0] tmp_13_fu_273_p1;
reg   [0:0] tmp_13_reg_819;
wire   [31:0] tmp_24_fu_357_p3;
reg   [31:0] tmp_24_reg_824;
wire   [0:0] tmp_25_fu_370_p2;
reg   [0:0] tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter1_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter2_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter3_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter4_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter5_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter6_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter7_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter8_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter9_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter10_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter11_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter12_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter13_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter14_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter15_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter16_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter17_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter18_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter19_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter20_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter21_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter22_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter23_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter24_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter25_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter26_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter27_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter28_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter29_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter30_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter31_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter32_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter33_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter34_tmp_25_reg_829;
reg   [0:0] ap_reg_pp0_iter35_tmp_25_reg_829;
wire   [31:0] n_1_fu_405_p2;
reg   [31:0] n_1_reg_843;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_31_fu_453_p2;
reg   [0:0] ap_reg_pp0_iter1_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter2_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter3_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter4_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter5_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter6_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter7_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter8_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter9_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter10_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter11_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter12_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter13_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter14_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter15_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter16_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter17_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter18_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter19_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter20_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter21_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter22_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter23_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter24_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter25_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter26_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter27_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter28_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter29_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter30_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter31_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter32_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter33_tmp_31_reg_864;
reg   [0:0] ap_reg_pp0_iter34_tmp_31_reg_864;
wire   [11:0] tmp_47_fu_523_p1;
reg   [11:0] tmp_47_reg_868;
reg   [1599:0] x1_5_fu_601_p4;
reg   [1599:0] x1_5_reg_874;
reg    ap_enable_reg_pp0_iter35;
reg   [1599:0] x2_5_fu_661_p4;
reg   [1599:0] x2_5_reg_880;
wire   [0:0] tmp_61_fu_671_p3;
reg   [0:0] tmp_61_reg_886;
wire   [0:0] tmp_62_fu_679_p3;
reg   [0:0] tmp_62_reg_891;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_condition_pp0_exit_iter35_state39;
reg   [10:0] invdar_reg_132;
wire   [0:0] tmp_2_fu_207_p2;
reg   [10:0] invdar8_reg_143;
reg   [31:0] ap_phi_mux_n_phi_fu_158_p4;
reg   [1599:0] ap_phi_mux_x2_1_phi_fu_169_p4;
reg   [1599:0] ap_phi_mux_x1_1_phi_fu_178_p4;
reg   [1599:0] x1_fu_100;
reg   [1599:0] x2_fu_104;
reg   [1599:0] x2_2_fu_231_p4;
reg   [31:0] count_1_fu_108;
wire   [31:0] count_fu_276_p3;
wire   [31:0] count_2_fu_712_p2;
wire   [0:0] tmp_32_fu_718_p2;
reg    last_preg;
wire    ap_block_pp0_stage0_01001;
reg    ap_reg_ioackin_out_V_V_TREADY;
wire   [11:0] tmp_fu_193_p1;
wire   [11:0] tmp_3_fu_227_p1;
wire   [31:0] tmp_6_fu_284_p2;
wire   [31:0] tmp_6_op_op_fu_297_p2;
wire   [31:0] p_neg_fu_310_p2;
wire   [30:0] p_lshr_fu_315_p4;
wire   [0:0] tmp_17_fu_302_p3;
wire   [30:0] p_neg_t_fu_325_p2;
wire   [30:0] tmp_19_fu_331_p4;
wire   [0:0] tmp_14_fu_289_p3;
wire   [30:0] tmp_20_fu_341_p3;
wire   [30:0] tmp_21_fu_349_p3;
wire   [31:0] grp_fu_381_p0;
wire   [11:0] grp_fu_381_p1;
wire   [11:0] grp_fu_387_p1;
wire   [31:0] grp_fu_399_p0;
wire   [11:0] grp_fu_399_p1;
wire   [31:0] grp_fu_411_p0;
wire   [11:0] grp_fu_411_p1;
wire   [31:0] grp_fu_423_p0;
wire   [11:0] grp_fu_423_p1;
wire   [31:0] grp_fu_435_p0;
wire   [11:0] grp_fu_435_p1;
wire   [31:0] grp_fu_447_p0;
wire   [11:0] grp_fu_447_p1;
wire   [11:0] grp_fu_381_p2;
wire   [11:0] tmp_26_fu_459_p1;
wire   [11:0] grp_fu_387_p2;
wire   [11:0] tmp_34_fu_471_p1;
wire   [0:0] tmp_30_fu_463_p3;
wire   [0:0] tmp_35_fu_475_p3;
wire   [11:0] grp_fu_399_p2;
wire   [11:0] tmp_36_fu_489_p1;
wire   [0:0] tmp_8_fu_483_p2;
wire   [11:0] grp_fu_411_p2;
wire   [11:0] tmp_45_fu_511_p1;
wire   [11:0] grp_fu_423_p2;
wire   [0:0] tmp_42_fu_503_p3;
wire   [0:0] tmp_46_fu_515_p3;
wire   [0:0] tmp_48_fu_527_p3;
wire   [0:0] tmp_49_fu_535_p3;
wire   [0:0] tmp6_fu_549_p2;
wire   [0:0] tmp5_fu_543_p2;
wire   [0:0] tmp_16_fu_555_p2;
wire   [11:0] grp_fu_435_p2;
reg   [1599:0] x1_4_fu_493_p4;
wire   [11:0] tmp_51_fu_571_p1;
wire   [0:0] tmp_52_fu_575_p3;
wire   [0:0] tmp_53_fu_583_p3;
wire   [11:0] grp_fu_447_p2;
wire   [11:0] tmp_54_fu_597_p1;
wire   [0:0] tmp_23_fu_591_p2;
reg   [1599:0] x2_4_fu_561_p4;
wire   [0:0] tmp_56_fu_611_p3;
wire   [0:0] tmp_57_fu_619_p3;
wire   [0:0] tmp_58_fu_627_p3;
wire   [0:0] tmp_59_fu_635_p3;
wire   [0:0] tmp8_fu_649_p2;
wire   [0:0] tmp7_fu_643_p2;
wire   [0:0] tmp_29_fu_655_p2;
wire   [0:0] tmp_63_fu_694_p3;
wire   [0:0] tmp_64_fu_700_p3;
wire   [0:0] bit1_fu_690_p2;
wire   [0:0] bit2_fu_706_p2;
wire   [0:0] tmp_33_fu_724_p2;
wire   [1:0] tmp_38_fu_737_p1;
wire   [1:0] tmp_37_fu_729_p3;
wire   [1:0] res_V_fu_741_p3;
reg    grp_fu_381_ce;
reg    grp_fu_387_ce;
reg    grp_fu_399_ce;
reg    grp_fu_411_ce;
reg    grp_fu_423_ce;
reg    grp_fu_435_ce;
reg    grp_fu_447_ce;
wire    ap_CS_fsm_state41;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 last_preg = 1'b0;
#0 ap_reg_ioackin_out_V_V_TREADY = 1'b0;
end

PN_GEN_srem_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
PN_GEN_srem_32ns_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_381_p0),
    .din1(grp_fu_381_p1),
    .ce(grp_fu_381_ce),
    .dout(grp_fu_381_p2)
);

PN_GEN_srem_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
PN_GEN_srem_32ns_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_phi_mux_n_phi_fu_158_p4),
    .din1(grp_fu_387_p1),
    .ce(grp_fu_387_ce),
    .dout(grp_fu_387_p2)
);

PN_GEN_srem_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
PN_GEN_srem_32ns_bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_399_p0),
    .din1(grp_fu_399_p1),
    .ce(grp_fu_399_ce),
    .dout(grp_fu_399_p2)
);

PN_GEN_srem_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
PN_GEN_srem_32ns_bkb_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_411_p0),
    .din1(grp_fu_411_p1),
    .ce(grp_fu_411_ce),
    .dout(grp_fu_411_p2)
);

PN_GEN_srem_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
PN_GEN_srem_32ns_bkb_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_423_p0),
    .din1(grp_fu_423_p1),
    .ce(grp_fu_423_ce),
    .dout(grp_fu_423_p2)
);

PN_GEN_srem_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
PN_GEN_srem_32ns_bkb_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_435_p0),
    .din1(grp_fu_435_p1),
    .ce(grp_fu_435_ce),
    .dout(grp_fu_435_p2)
);

PN_GEN_srem_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
PN_GEN_srem_32ns_bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_447_p0),
    .din1(grp_fu_447_p1),
    .ce(grp_fu_447_ce),
    .dout(grp_fu_447_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_25_fu_370_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter35_state39)) | ((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
            ap_enable_reg_pp0_iter35 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter35_state39))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter34;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end else if (((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter36 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_out_V_V_TREADY <= 1'b0;
    end else begin
        if (((ap_reg_pp0_iter35_tmp_31_reg_864 == 1'd1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
            if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                ap_reg_ioackin_out_V_V_TREADY <= 1'b0;
            end else if (((1'b0 == ap_block_pp0_stage0_01001) & (out_V_V_TREADY == 1'b1))) begin
                ap_reg_ioackin_out_V_V_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        last_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_pp0_iter35_tmp_31_reg_864 == 1'd1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
            last_preg <= tmp_32_fu_718_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter35_tmp_31_reg_864 == 1'd1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        count_1_fu_108 <= count_2_fu_712_p2;
    end else if (((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        count_1_fu_108 <= count_fu_276_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_207_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar8_reg_143 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_4_fu_241_p2 == 1'd0))) begin
        invdar8_reg_143 <= indvarinc9_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_132 <= indvarinc_fu_187_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        invdar_reg_132 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_25_reg_829 == 1'd0))) begin
        n_reg_154 <= n_1_reg_843;
    end else if (((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        n_reg_154 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter35_tmp_25_reg_829 == 1'd0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        x1_1_reg_175 <= x1_5_reg_874;
    end else if (((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        x1_1_reg_175 <= x1_3_fu_252_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter35_tmp_25_reg_829 == 1'd0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        x2_1_reg_166 <= x2_5_reg_880;
    end else if (((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        x2_1_reg_166 <= x2_3_fu_261_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_tmp_25_reg_829 <= ap_reg_pp0_iter9_tmp_25_reg_829;
        ap_reg_pp0_iter10_tmp_31_reg_864 <= ap_reg_pp0_iter9_tmp_31_reg_864;
        ap_reg_pp0_iter11_tmp_25_reg_829 <= ap_reg_pp0_iter10_tmp_25_reg_829;
        ap_reg_pp0_iter11_tmp_31_reg_864 <= ap_reg_pp0_iter10_tmp_31_reg_864;
        ap_reg_pp0_iter12_tmp_25_reg_829 <= ap_reg_pp0_iter11_tmp_25_reg_829;
        ap_reg_pp0_iter12_tmp_31_reg_864 <= ap_reg_pp0_iter11_tmp_31_reg_864;
        ap_reg_pp0_iter13_tmp_25_reg_829 <= ap_reg_pp0_iter12_tmp_25_reg_829;
        ap_reg_pp0_iter13_tmp_31_reg_864 <= ap_reg_pp0_iter12_tmp_31_reg_864;
        ap_reg_pp0_iter14_tmp_25_reg_829 <= ap_reg_pp0_iter13_tmp_25_reg_829;
        ap_reg_pp0_iter14_tmp_31_reg_864 <= ap_reg_pp0_iter13_tmp_31_reg_864;
        ap_reg_pp0_iter15_tmp_25_reg_829 <= ap_reg_pp0_iter14_tmp_25_reg_829;
        ap_reg_pp0_iter15_tmp_31_reg_864 <= ap_reg_pp0_iter14_tmp_31_reg_864;
        ap_reg_pp0_iter16_tmp_25_reg_829 <= ap_reg_pp0_iter15_tmp_25_reg_829;
        ap_reg_pp0_iter16_tmp_31_reg_864 <= ap_reg_pp0_iter15_tmp_31_reg_864;
        ap_reg_pp0_iter17_tmp_25_reg_829 <= ap_reg_pp0_iter16_tmp_25_reg_829;
        ap_reg_pp0_iter17_tmp_31_reg_864 <= ap_reg_pp0_iter16_tmp_31_reg_864;
        ap_reg_pp0_iter18_tmp_25_reg_829 <= ap_reg_pp0_iter17_tmp_25_reg_829;
        ap_reg_pp0_iter18_tmp_31_reg_864 <= ap_reg_pp0_iter17_tmp_31_reg_864;
        ap_reg_pp0_iter19_tmp_25_reg_829 <= ap_reg_pp0_iter18_tmp_25_reg_829;
        ap_reg_pp0_iter19_tmp_31_reg_864 <= ap_reg_pp0_iter18_tmp_31_reg_864;
        ap_reg_pp0_iter20_tmp_25_reg_829 <= ap_reg_pp0_iter19_tmp_25_reg_829;
        ap_reg_pp0_iter20_tmp_31_reg_864 <= ap_reg_pp0_iter19_tmp_31_reg_864;
        ap_reg_pp0_iter21_tmp_25_reg_829 <= ap_reg_pp0_iter20_tmp_25_reg_829;
        ap_reg_pp0_iter21_tmp_31_reg_864 <= ap_reg_pp0_iter20_tmp_31_reg_864;
        ap_reg_pp0_iter22_tmp_25_reg_829 <= ap_reg_pp0_iter21_tmp_25_reg_829;
        ap_reg_pp0_iter22_tmp_31_reg_864 <= ap_reg_pp0_iter21_tmp_31_reg_864;
        ap_reg_pp0_iter23_tmp_25_reg_829 <= ap_reg_pp0_iter22_tmp_25_reg_829;
        ap_reg_pp0_iter23_tmp_31_reg_864 <= ap_reg_pp0_iter22_tmp_31_reg_864;
        ap_reg_pp0_iter24_tmp_25_reg_829 <= ap_reg_pp0_iter23_tmp_25_reg_829;
        ap_reg_pp0_iter24_tmp_31_reg_864 <= ap_reg_pp0_iter23_tmp_31_reg_864;
        ap_reg_pp0_iter25_tmp_25_reg_829 <= ap_reg_pp0_iter24_tmp_25_reg_829;
        ap_reg_pp0_iter25_tmp_31_reg_864 <= ap_reg_pp0_iter24_tmp_31_reg_864;
        ap_reg_pp0_iter26_tmp_25_reg_829 <= ap_reg_pp0_iter25_tmp_25_reg_829;
        ap_reg_pp0_iter26_tmp_31_reg_864 <= ap_reg_pp0_iter25_tmp_31_reg_864;
        ap_reg_pp0_iter27_tmp_25_reg_829 <= ap_reg_pp0_iter26_tmp_25_reg_829;
        ap_reg_pp0_iter27_tmp_31_reg_864 <= ap_reg_pp0_iter26_tmp_31_reg_864;
        ap_reg_pp0_iter28_tmp_25_reg_829 <= ap_reg_pp0_iter27_tmp_25_reg_829;
        ap_reg_pp0_iter28_tmp_31_reg_864 <= ap_reg_pp0_iter27_tmp_31_reg_864;
        ap_reg_pp0_iter29_tmp_25_reg_829 <= ap_reg_pp0_iter28_tmp_25_reg_829;
        ap_reg_pp0_iter29_tmp_31_reg_864 <= ap_reg_pp0_iter28_tmp_31_reg_864;
        ap_reg_pp0_iter2_tmp_25_reg_829 <= ap_reg_pp0_iter1_tmp_25_reg_829;
        ap_reg_pp0_iter2_tmp_31_reg_864 <= ap_reg_pp0_iter1_tmp_31_reg_864;
        ap_reg_pp0_iter30_tmp_25_reg_829 <= ap_reg_pp0_iter29_tmp_25_reg_829;
        ap_reg_pp0_iter30_tmp_31_reg_864 <= ap_reg_pp0_iter29_tmp_31_reg_864;
        ap_reg_pp0_iter31_tmp_25_reg_829 <= ap_reg_pp0_iter30_tmp_25_reg_829;
        ap_reg_pp0_iter31_tmp_31_reg_864 <= ap_reg_pp0_iter30_tmp_31_reg_864;
        ap_reg_pp0_iter32_tmp_25_reg_829 <= ap_reg_pp0_iter31_tmp_25_reg_829;
        ap_reg_pp0_iter32_tmp_31_reg_864 <= ap_reg_pp0_iter31_tmp_31_reg_864;
        ap_reg_pp0_iter33_tmp_25_reg_829 <= ap_reg_pp0_iter32_tmp_25_reg_829;
        ap_reg_pp0_iter33_tmp_31_reg_864 <= ap_reg_pp0_iter32_tmp_31_reg_864;
        ap_reg_pp0_iter34_tmp_25_reg_829 <= ap_reg_pp0_iter33_tmp_25_reg_829;
        ap_reg_pp0_iter34_tmp_31_reg_864 <= ap_reg_pp0_iter33_tmp_31_reg_864;
        ap_reg_pp0_iter35_tmp_25_reg_829 <= ap_reg_pp0_iter34_tmp_25_reg_829;
        ap_reg_pp0_iter35_tmp_31_reg_864 <= ap_reg_pp0_iter34_tmp_31_reg_864;
        ap_reg_pp0_iter3_tmp_25_reg_829 <= ap_reg_pp0_iter2_tmp_25_reg_829;
        ap_reg_pp0_iter3_tmp_31_reg_864 <= ap_reg_pp0_iter2_tmp_31_reg_864;
        ap_reg_pp0_iter4_tmp_25_reg_829 <= ap_reg_pp0_iter3_tmp_25_reg_829;
        ap_reg_pp0_iter4_tmp_31_reg_864 <= ap_reg_pp0_iter3_tmp_31_reg_864;
        ap_reg_pp0_iter5_tmp_25_reg_829 <= ap_reg_pp0_iter4_tmp_25_reg_829;
        ap_reg_pp0_iter5_tmp_31_reg_864 <= ap_reg_pp0_iter4_tmp_31_reg_864;
        ap_reg_pp0_iter6_tmp_25_reg_829 <= ap_reg_pp0_iter5_tmp_25_reg_829;
        ap_reg_pp0_iter6_tmp_31_reg_864 <= ap_reg_pp0_iter5_tmp_31_reg_864;
        ap_reg_pp0_iter7_tmp_25_reg_829 <= ap_reg_pp0_iter6_tmp_25_reg_829;
        ap_reg_pp0_iter7_tmp_31_reg_864 <= ap_reg_pp0_iter6_tmp_31_reg_864;
        ap_reg_pp0_iter8_tmp_25_reg_829 <= ap_reg_pp0_iter7_tmp_25_reg_829;
        ap_reg_pp0_iter8_tmp_31_reg_864 <= ap_reg_pp0_iter7_tmp_31_reg_864;
        ap_reg_pp0_iter9_tmp_25_reg_829 <= ap_reg_pp0_iter8_tmp_25_reg_829;
        ap_reg_pp0_iter9_tmp_31_reg_864 <= ap_reg_pp0_iter8_tmp_31_reg_864;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_tmp_25_reg_829 <= tmp_25_reg_829;
        ap_reg_pp0_iter1_tmp_31_reg_864 <= tmp_31_reg_864;
        tmp_25_reg_829 <= tmp_25_fu_370_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_25_fu_370_p2 == 1'd0))) begin
        n_1_reg_843 <= n_1_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_13_reg_819 <= tmp_13_fu_273_p1;
        tmp_24_reg_824[31 : 1] <= tmp_24_fu_357_p3[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_25_fu_370_p2 == 1'd0))) begin
        tmp_31_reg_864 <= tmp_31_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter34_tmp_25_reg_829 == 1'd0))) begin
        tmp_47_reg_868 <= tmp_47_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter34_tmp_31_reg_864 == 1'd1) & (ap_reg_pp0_iter34_tmp_25_reg_829 == 1'd0))) begin
        tmp_61_reg_886 <= tmp_61_fu_671_p3;
        tmp_62_reg_891 <= tmp_62_fu_679_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_2_reg_779 <= x1_2_fu_197_p4;
        x1_fu_100 <= x1_2_fu_197_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter34_tmp_25_reg_829 == 1'd0) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        x1_5_reg_874 <= x1_5_fu_601_p4;
        x2_5_reg_880 <= x2_5_fu_661_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x2_fu_104 <= x2_2_fu_231_p4;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        ap_condition_pp0_exit_iter35_state39 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter35_state39 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_25_reg_829 == 1'd0))) begin
        ap_phi_mux_n_phi_fu_158_p4 = n_1_reg_843;
    end else begin
        ap_phi_mux_n_phi_fu_158_p4 = n_reg_154;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_reg_pp0_iter35_tmp_25_reg_829 == 1'd0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_phi_mux_x1_1_phi_fu_178_p4 = x1_5_reg_874;
    end else begin
        ap_phi_mux_x1_1_phi_fu_178_p4 = x1_1_reg_175;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_reg_pp0_iter35_tmp_25_reg_829 == 1'd0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_phi_mux_x2_1_phi_fu_169_p4 = x2_5_reg_880;
    end else begin
        ap_phi_mux_x2_1_phi_fu_169_p4 = x2_1_reg_166;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_out_V_V_TREADY == 1'b0)) begin
        ap_sig_ioackin_out_V_V_TREADY = out_V_V_TREADY;
    end else begin
        ap_sig_ioackin_out_V_V_TREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_381_ce = 1'b1;
    end else begin
        grp_fu_381_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_387_ce = 1'b1;
    end else begin
        grp_fu_387_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_399_ce = 1'b1;
    end else begin
        grp_fu_399_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_411_ce = 1'b1;
    end else begin
        grp_fu_411_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_423_ce = 1'b1;
    end else begin
        grp_fu_423_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_435_ce = 1'b1;
    end else begin
        grp_fu_435_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_447_ce = 1'b1;
    end else begin
        grp_fu_447_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_pp0_iter35_tmp_31_reg_864 == 1'd1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        last = tmp_32_fu_718_p2;
    end else begin
        last = last_preg;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter35_tmp_31_reg_864 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_pp0_iter35_tmp_31_reg_864 == 1'd1) & (ap_reg_ioackin_out_V_V_TREADY == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_2_fu_207_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_4_fu_241_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter34 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter34 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_block_state40_io) & (ap_enable_reg_pp0_iter36 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state40_io) & (ap_enable_reg_pp0_iter36 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_io = ((ap_reg_pp0_iter35_tmp_31_reg_864 == 1'd1) & (ap_sig_ioackin_out_V_V_TREADY == 1'b0));
end

assign ap_block_state40_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bit1_fu_690_p2 = (tmp_62_reg_891 ^ tmp_61_reg_886);

assign bit2_fu_706_p2 = (tmp_64_fu_700_p3 ^ tmp_63_fu_694_p3);

assign count_2_fu_712_p2 = (count_1_fu_108 + 32'd2);

assign count_fu_276_p3 = ((tmp_13_fu_273_p1[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign grp_fu_381_p0 = (32'd3 + ap_phi_mux_n_phi_fu_158_p4);

assign grp_fu_381_p1 = 32'd1600;

assign grp_fu_387_p1 = 32'd1600;

assign grp_fu_399_p0 = (32'd31 + ap_phi_mux_n_phi_fu_158_p4);

assign grp_fu_399_p1 = 32'd1600;

assign grp_fu_411_p0 = (32'd2 + ap_phi_mux_n_phi_fu_158_p4);

assign grp_fu_411_p1 = 32'd1600;

assign grp_fu_423_p0 = (ap_phi_mux_n_phi_fu_158_p4 | 32'd1);

assign grp_fu_423_p1 = 32'd1600;

assign grp_fu_435_p0 = (32'd4 + ap_phi_mux_n_phi_fu_158_p4);

assign grp_fu_435_p1 = 32'd1600;

assign grp_fu_447_p0 = (32'd32 + ap_phi_mux_n_phi_fu_158_p4);

assign grp_fu_447_p1 = 32'd1600;

assign indvarinc9_fu_221_p2 = (invdar8_reg_143 + 11'd1);

assign indvarinc_fu_187_p2 = (invdar_reg_132 + 11'd1);

assign n_1_fu_405_p2 = (32'd2 + ap_phi_mux_n_phi_fu_158_p4);

assign out_V_V_TDATA = res_V_fu_741_p3;

assign p_lshr_fu_315_p4 = {{p_neg_fu_310_p2[31:1]}};

assign p_neg_fu_310_p2 = ($signed(32'd4294965695) - $signed(length_r));

assign p_neg_t_fu_325_p2 = (31'd0 - p_lshr_fu_315_p4);

assign res_V_fu_741_p3 = ((tmp_33_fu_724_p2[0:0] === 1'b1) ? tmp_38_fu_737_p1 : tmp_37_fu_729_p3);

assign tmp5_fu_543_p2 = (tmp_46_fu_515_p3 ^ tmp_42_fu_503_p3);

assign tmp6_fu_549_p2 = (tmp_49_fu_535_p3 ^ tmp_48_fu_527_p3);

assign tmp7_fu_643_p2 = (tmp_57_fu_619_p3 ^ tmp_56_fu_611_p3);

assign tmp8_fu_649_p2 = (tmp_59_fu_635_p3 ^ tmp_58_fu_627_p3);

assign tmp_13_fu_273_p1 = length_r[0:0];

assign tmp_14_fu_289_p3 = tmp_6_fu_284_p2[32'd31];

assign tmp_16_fu_555_p2 = (tmp6_fu_549_p2 ^ tmp5_fu_543_p2);

assign tmp_17_fu_302_p3 = tmp_6_op_op_fu_297_p2[32'd31];

assign tmp_19_fu_331_p4 = {{tmp_6_op_op_fu_297_p2[31:1]}};

assign tmp_20_fu_341_p3 = ((tmp_17_fu_302_p3[0:0] === 1'b1) ? p_neg_t_fu_325_p2 : tmp_19_fu_331_p4);

assign tmp_21_fu_349_p3 = ((tmp_14_fu_289_p3[0:0] === 1'b1) ? 31'd0 : tmp_20_fu_341_p3);

assign tmp_23_fu_591_p2 = (tmp_53_fu_583_p3 ^ tmp_52_fu_575_p3);

assign tmp_24_fu_357_p3 = {{tmp_21_fu_349_p3}, {1'd0}};

assign tmp_25_fu_370_p2 = ((ap_phi_mux_n_phi_fu_158_p4 == tmp_24_reg_824) ? 1'b1 : 1'b0);

assign tmp_26_fu_459_p1 = grp_fu_381_p2[11:0];

assign tmp_29_fu_655_p2 = (tmp8_fu_649_p2 ^ tmp7_fu_643_p2);

assign tmp_2_fu_207_p2 = ((invdar_reg_132 == 11'd1599) ? 1'b1 : 1'b0);

assign tmp_30_fu_463_p3 = ap_phi_mux_x1_1_phi_fu_178_p4[tmp_26_fu_459_p1];

assign tmp_31_fu_453_p2 = (($signed(ap_phi_mux_n_phi_fu_158_p4) > $signed(32'd1599)) ? 1'b1 : 1'b0);

assign tmp_32_fu_718_p2 = ((count_2_fu_712_p2 == length_r) ? 1'b1 : 1'b0);

assign tmp_33_fu_724_p2 = (tmp_32_fu_718_p2 & tmp_13_reg_819);

assign tmp_34_fu_471_p1 = grp_fu_387_p2[11:0];

assign tmp_35_fu_475_p3 = ap_phi_mux_x1_1_phi_fu_178_p4[tmp_34_fu_471_p1];

assign tmp_36_fu_489_p1 = grp_fu_399_p2[11:0];

assign tmp_37_fu_729_p3 = {{bit1_fu_690_p2}, {bit2_fu_706_p2}};

assign tmp_38_fu_737_p1 = bit1_fu_690_p2;

assign tmp_3_fu_227_p1 = invdar8_reg_143;

assign tmp_42_fu_503_p3 = ap_phi_mux_x2_1_phi_fu_169_p4[tmp_26_fu_459_p1];

assign tmp_45_fu_511_p1 = grp_fu_411_p2[11:0];

assign tmp_46_fu_515_p3 = ap_phi_mux_x2_1_phi_fu_169_p4[tmp_45_fu_511_p1];

assign tmp_47_fu_523_p1 = grp_fu_423_p2[11:0];

assign tmp_48_fu_527_p3 = ap_phi_mux_x2_1_phi_fu_169_p4[tmp_47_fu_523_p1];

assign tmp_49_fu_535_p3 = ap_phi_mux_x2_1_phi_fu_169_p4[tmp_34_fu_471_p1];

assign tmp_4_fu_241_p2 = ((invdar8_reg_143 == 11'd1599) ? 1'b1 : 1'b0);

assign tmp_51_fu_571_p1 = grp_fu_435_p2[11:0];

assign tmp_52_fu_575_p3 = x1_4_fu_493_p4[tmp_51_fu_571_p1];

assign tmp_53_fu_583_p3 = x1_4_fu_493_p4[tmp_47_fu_523_p1];

assign tmp_54_fu_597_p1 = grp_fu_447_p2[11:0];

assign tmp_56_fu_611_p3 = x2_4_fu_561_p4[tmp_51_fu_571_p1];

assign tmp_57_fu_619_p3 = x2_4_fu_561_p4[tmp_26_fu_459_p1];

assign tmp_58_fu_627_p3 = x2_4_fu_561_p4[tmp_45_fu_511_p1];

assign tmp_59_fu_635_p3 = x2_4_fu_561_p4[tmp_47_fu_523_p1];

assign tmp_61_fu_671_p3 = x1_5_fu_601_p4[tmp_34_fu_471_p1];

assign tmp_62_fu_679_p3 = x2_5_fu_661_p4[tmp_34_fu_471_p1];

assign tmp_63_fu_694_p3 = x1_5_reg_874[tmp_47_reg_868];

assign tmp_64_fu_700_p3 = x2_5_reg_880[tmp_47_reg_868];

assign tmp_6_fu_284_p2 = (32'd1600 + length_r);

assign tmp_6_op_op_fu_297_p2 = (32'd1601 + length_r);

assign tmp_8_fu_483_p2 = (tmp_35_fu_475_p3 ^ tmp_30_fu_463_p3);

assign tmp_fu_193_p1 = invdar_reg_132;

always @ (*) begin
    x1_2_fu_197_p4 = x1_fu_100;
    x1_2_fu_197_p4[tmp_fu_193_p1] = |(1'd0);
end

always @ (*) begin
    x1_3_fu_252_p4 = x1_2_reg_779;
    x1_3_fu_252_p4[32'd0] = |(1'd1);
end

always @ (*) begin
    x1_4_fu_493_p4 = ap_phi_mux_x1_1_phi_fu_178_p4;
    x1_4_fu_493_p4[tmp_36_fu_489_p1] = |(tmp_8_fu_483_p2);
end

always @ (*) begin
    x1_5_fu_601_p4 = x1_4_fu_493_p4;
    x1_5_fu_601_p4[tmp_54_fu_597_p1] = |(tmp_23_fu_591_p2);
end

always @ (*) begin
    x2_2_fu_231_p4 = x2_fu_104;
    x2_2_fu_231_p4[tmp_3_fu_227_p1] = |(1'd0);
end

assign x2_3_fu_261_p5 = {{x2_2_fu_231_p4[1599:31]}, {31'd100}};

always @ (*) begin
    x2_4_fu_561_p4 = ap_phi_mux_x2_1_phi_fu_169_p4;
    x2_4_fu_561_p4[tmp_36_fu_489_p1] = |(tmp_16_fu_555_p2);
end

always @ (*) begin
    x2_5_fu_661_p4 = x2_4_fu_561_p4;
    x2_5_fu_661_p4[tmp_54_fu_597_p1] = |(tmp_29_fu_655_p2);
end

always @ (posedge ap_clk) begin
    tmp_24_reg_824[0] <= 1'b0;
end

endmodule //PN_GEN
